---
subtitle: "Rapport statistique V2.0"
cache: true
---

::: {.panel-tabset}

```{r}
#| label: setup

rm(list = ls())
#
library(baseph)
library(janitor)
library(tidyverse)
library(gtsummary)
library(readODS)
library(ggcorrplot)
library(kableExtra)
library(lubridate)
library(kableExtra)
library(forestmodel)
library(labelled)
library(epiDisplay)
library(visdat)
library(GGally)
library(epiR)
library(plotly)
library(ggsci)
library(colorspace)
library(apyramid)
library(plotROC)
#
theme_gtsummary_language(language = "fr", decimal.mark = ",")
options(OutDec = ",")
ptest <- list(all_continuous() ~ "wilcox.test", all_categorical() ~ "chisq.test")
stt <- list(
  all_continuous() ~ "{median} ({p25}, {p75})",
  all_categorical() ~ "{n} ({p}%)"
)
#
load("data/copsca.RData")
classeur <- "copsca2.ods"
expx <- TRUE
if (expx) {
  file.create(classeur)
  file.remove(classeur)
  write_ods(iris, classeur)
}
#
oo <- "Oui"
ouinon <- list(
  htaon = oo,
  cardiopathon = oo,
  trcon = oo,
  cardiopatfamilion = oo,
  diabeton = oo,
  surpdson = oo,
  dyspneeon = oo,
  aspirinon = oo,
  ircon = oo,
  douleur7on = oo,
  symptoassoon = oo,
  dyspneeon = oo,
  irradbrason = oo,
  irradmachon = oo,
  autredoumon = oo,
  antalgon = oo,
  paracetamon = oo,
  paracetcodon = oo,
  acupanon = oo,
  morphinon = oo,
  tramadolon = oo,
  ainson = oo,
  termon = oo)
```

```{r}
#| label: macro_date

difdate <- function(dd1,hh1,dd2,hh2){
  zz1 <- as.numeric(dmy_hms(paste0(dd1," ",hh1)))
  zz2 <- as.numeric(dmy_hms(paste0(dd2," ",hh2)))
  dif <- (zz2 - zz1)/60
  return(dif)
}
```

```{r}
#| label: macro_ssbspc

tbssb <- function(ll, sca = tt$scanonston) {
  taa <- table(ll, sca)
  naa <- sum(taa)
  aa <- epi.tests(taa)[1]$detail |>
    as_tibble() |>
    dplyr::slice(3, 4, 9, 10) |>
    mutate(res = paste0(npc(est), " % [", npc(lower), ",", npc(upper), "]")) |>
    dplyr::select(statistic, res) |>
    pivot_wider(names_from = statistic, values_from = res) |>
    mutate(n = naa) |>
    relocate(n, .before = se)
  tabx <- rbind(tabx, aa)
  return(tabx)
}

npc <- function(x) {
  a <- round(x * 100, 0)
  return(a)
}
```

# Qualité des données

### Corrélations anormales

```{r}
#| label: fig-corr
#| fig-cap: Corrélations internes
#| eval: true
zz <- tt |>
  dplyr::select(!subjid) |>
  mutate_if(is.factor, as.numeric) |>
    dplyr::select(!oppositon:tropoon) |> 
  janitor::remove_constant() |> 
  janitor::remove_empty() |> 
  
  remove_constant()
zzf <- cor(zz, use = "pairwise.complete.obs")
ggcorrplot(zzf,
  type = "lower",
  method = "square",
  ggtheme = "theme_light") +
  labs(title = "Corrélations",
      subtitle = "",
      x = "",
      y = "",
      caption = "",
      fill = "") +
  theme_light() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 12),
    axis.title.x = element_text(size = 12),
    legend.title = element_text(size = 12),
    axis.title.y = element_text(
      size = 12,
      angle = 90,
      vjust = .5
    ),
  axis.text.x = element_text(
      angle = 90,
      vjust = .5,
      size = 5),
  axis.text.y = element_text(size = 5),
  legend.position = "right"
  )
```

On ne met pas en évidence de corrélation anormale ou gênante. 

### Données manquantes

```{r}
#| label: fig-manq
#| fig-cap: Données manquantes

tt |>
  dplyr::select(-c(subjid)) |>
  vis_dat(palette = "qual")

tt <- tt |>
  janitor::remove_constant() |>
  janitor::remove_empty()
  
```

Les variables  `embolon`, `oppositon`, `decinveston` & `novonoon` sont vides (ou remplies uniquement de `Non`) & ne seront pas utilisées dans la suite de l'analyse. 


# Description de la population

:::{.callout-warning}
## Attention !

- Dans les tableaux, pour les variables en Oui/non, seul les résultats pour les `Oui` sont présentés.

- Dans les figures comportant des dosages, les axes sont le plus souvent logarithmique.
:::

\bigskip

L'échantillon comporte `r nrow(tt)` cas. 



```{r}
#| label: tbl-sca
#| tbl-cap: Diagnostic final

tt |> 
  dplyr::select(scanonston) |> 
  tbl_summary( statistic = stt,             
               value = ouinon) |> 
  modify_header(label ~ " ") |>
bold_labels() |>
pexptabph(nomfich = classeur,
nomsheet = "sca",
exp = expx)
```

Le faible nombre de patients positif pour le SCA ST- fragilise l'échantillon &, en particulier, oblige à utiliser des tests non paramétriques car il est impossible de faire une hypothèse de normalité sur un échantillon de 25 cas. 

## Démographie

```{r}
#| label: tbl-demog
#| tbl-cap: Données démographiques

tt |> 
  drop_na(scanonston) |>
dplyr::select(age:imc, scanonston) |>
tbl_summary(missing = "no", 
by = scanonston,
  statistic = stt,             value = ouinon) |>
tabph(nn = 2, nomv = "**SCA ST-**", normx = FALSE) |> 
pexptabph(nomfich = classeur,
nomsheet = "demog1",
exp = expx) 
```

Les différences -- attendues -- entre les deux groupes seront à prendre en compte pour les analyses suivantes.


```{r}
#| label: fig-ages
#| fig-cap: Pyramide des âges

gg <- tt |>
    mutate(agerec = cut(age,
    breaks = c(20, 30, 40, 50, 60, 70, 80, 90, 100),
    labels = c("21-30", "31,40", "41-50", "51-60", "61-70", "71,80", "81-90", ">90")
))|>
mutate(agerec = as.factor(agerec)) |>
# Tracé du graphique
age_pyramid(age_group = "agerec",
            split_by = "sex",
            pal = c("pink", "lightblue"),
show_midpoint = FALSE) +
theme_light() +
    labs(title = "Pyramide des âges",
         x = "ans",
        fill = "Sexe") + 
    theme(
      plot.title = element_text(size = 14, face = "bold"),
      plot.subtitle = element_text(size = 12),
      axis.title.x = element_blank(),
      axis.title.y = element_text(size = 12),
      legend.title = element_blank(),
      legend.position = "bottom")

plot(gg)
```

\clearpage

## Antécédents

```{r}
#| label: tbl-atcd
#| tbl-cap: Antécédents

tt |>
  drop_na(scanonston) |>
dplyr::select(2:11,scanonston) |>
tbl_summary(missing = "no", 
            by = scanonston,
             statistic = stt,
            value = ouinon) |>
tabph(nn = 2, nomv = "**SCA ST-**", normx = FALSE) |> 
 pexptabph(nomfich = classeur,
 nomsheet = "atcd1",
 exp = expx, 
 lg = TRUE)
```

\newpage

## Clinique

```{r}
#| label: tbl-clinique
#| tbl-cap: Tableau clinique

tt |>
  drop_na(scanonston) |>
  dplyr::select(douleur7on:autredoumon, scanonston) |>
  tbl_summary(
    missing = "no",
    by = scanonston,
    type = list(
      doulh0 ~ "continuous",
      doulh3 ~ "continuous"
    ),
    statistic = stt, value = ouinon
  ) |>
tabph(nn = 2, nomv = "**SCA ST-**", normx = FALSE) |> 
  gexptabph(
    nomfich = classeur,
    nomsheet = "cliniq",
    exp = expx
  )

```

 

```{r}
#| label: tbl-ttantalg
#| tbl-cap: Traitements antalgiques reçus

tt |>
  dplyr::select(antalgon:ainson, scanonston) |>
  tbl_summary(
    missing = "no",
    by = scanonston,
    statistic = stt, value = ouinon
  ) |>
tabph(nn = 2, nomv = "**SCA ST-**", normx = FALSE) |> 
  pexptabph(
    nomfich = classeur,
    nomsheet = "antalg",
    exp = expx, 
    lg = TRUE
  )
```

```{r}
#| label: tbl-delais
#| tbl-cap: Délais

tt |>
  dplyr::select(sympt_urg:urg_h3, h0h3, scanonston) |>
  tbl_summary(
    missing = "no",
    by = scanonston,
    statistic = stt
  ) |>
tabph(nn = 2, nomv = "**SCA ST-**", normx = FALSE) |> 
  gexptabph(
    nomfich = classeur,
    nomsheet = "delais",
    exp = expx
  )
```


# Résultats biologiques

:::{.callout-warning}
## Attention !

- Dans les tableaux, pour les variables en Oui/non, seul les résultats pour les `Oui` sont présentés.

- Dans les figures comportant des dosages, les axes sont le plus souvent logarithmique.
:::

Description simple des divers taux de troponine & copeptine.

```{r}
#| label: tbl-biol
#| tbl-cap: Marqueurs à H0 et H3

tt |>
  dplyr::select(tropoh0, copepth0, tropoh3, scanonston) |>
  tbl_summary(
    missing = "no",
    by = scanonston,
    statistic = stt,
    value = ouinon
  ) |>
tabph(nn = 2, nomv = "**SCA ST-**", normx = FALSE) |> 
  pexptabph(
    nomfich = classeur,
    nomsheet = "biol",
    exp = expx
  )
```

```{r}
#| label: tbl-tpcpt
#| tbl-cap: Résultats à H0 & diagnostic final

tt |> 
  dplyr::select(tp0,cp0,tpcp0,scanonston) |> 
  tbl_summary(by = scanonston, 
              statistic = stt,
              missing = "no", 
              percent = "row") |> 
tabph(nn = 2, nomv = "**SCA ST-**", normx = FALSE) |> 
pexptabph(nomfich = classeur,
nomsheet = "tpcpt",
exp = expx)
```



## Corrélation entre la copeptine et la troponine

```{r}
#| label: fig-trpopct0
#| fig-cap: Corrélation Copeptine/Troponine

zzc <- cor.test(tt$copepth0, tt$tropoh0, method = "spearman")
zzc <- beaup(zzc[[3]], affp = 1)

gg <- tt |>
drop_na(tropoh0, copepth0) |> 
ggplot() +
aes(x = copepth0, y = tropoh0, color = sex) +
geom_jitter()+
geom_smooth(method = "lm", se = TRUE, alpha = 0.2) +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
  annotation_logticks() +
theme_light() +
    labs(title = "Corrélation copeptine/troponine",
         subtitle = zzc,
        fill = "Sexe",
x = "copeptine (pg/mL)", 
y = "Troponine (pg/mL)") +
    theme(
      plot.title = element_text(size = 16, face = "bold"),
      plot.subtitle = element_text(size = 12),
      axis.title.x = element_text(size = 12),
      axis.title.y = element_text(size = 12),
      legend.title = element_blank(),
      legend.position = "top")


plot(gg)
```

```{r}
#| label: tbl-tpcp2
#| tbl-cap: Corrélation Copeptine/Troponine
zz <- cor.test(tt$copepth0, tt$tropoh0, method = "spearman")
zz <- paste0("r = ", round(zz[[4]],2), " - ", beaup(zz[[3]], affp = 1))

tt |> 
  drop_na(tp0,cp0) |> 
  tbl_cross(tp0, cp0,percent = "cell",
            missing_text = "Inconnue") |> 
bold_labels() |>
  add_p(test = "wilcox.test") |> 
  bold_p() |> 
pexptabph(nomfich = classeur,
nomsheet = "ptcp2",
exp = expx)
```

Il existe une bonne corrélation entre les deux indicateurs (`r zz`).


# Critère principal

**Le diagnostic de SCA ST- est porté sur une valeur supérieure à 5 fois la valeur seuil au 99<sup>e</sup> percentile ou une élévation prouvée des concentrations de troponine cardiaque, avec au moins une valeur supérieure au 99<sup>e</sup> percentile de la limite supérieure de référence associée à une augmentation ou diminution de la concentration de troponine sur les 2 dosages pour prouver le caractère aigu de cette élévation.**

:::{.callout-warning}
## Attention !

- Dans les tableaux, pour les variables en Oui/non, seul les résultats pour les `Oui` sont présentés.

- Dans les figures comportant des dosages, les axes sont le plus souvent logarithmique.
:::

Vu avec le laboratoire de l'hôpital pour la troponine les valeurs seuil au 99<sup>e</sup> percentile sont les suivantes : 

- supérieur à 15.6 pg/mL pour les femmes 
- supérieur à 34.2 pg/mL pour les hommes


## Recheche d'un seuil pour la copeptine

Dans un premier temps, nous avons cherché un seuil pour la copeptine sans tenir compte de la troponine.

```{r}
#| label: fig-roc_copeptine
#| fig-cap: Copeptine à H0 - Courbe ROC
#| fig-asp: 1

zz <- tt |>
mutate(scanonston = ifelse(scanonston == "Oui", 1, 0)) |>
ggplot() +
aes(d = scanonston, m = copepth0) +
geom_roc() +
style_roc(guide = TRUE, theme = theme_light) +
geom_abline(aes(intercept = 0, slope  = 1), linetype = 2, color = "grey50") +
labs(title = "Copeptine H0", 
     x = " 1 - sensibilité", 
     y = "Spécificité") +
theme(plot.title = element_text(size = 16, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12))


zz +
geom_rocci(fill = "pink") +
annotate(
"text",
x = .75,
y = .25,
size = 6,
label = paste("AUC =", round(calc_auc(zz)$AUC, 2))
)
```

Le seuil semble se trouver entre 6 & 14 pg/mL. Vu l'échantillon modeste les intervalles de confiance (en rose sur la courbe) sont larges. Donc nous resterons sur la seuil proposé par le laboratoire de Tenon à 10 pg/mL.



## Seuil selon la troponine

Nous essayons de voir si le seuil varie selon le taux de troponine à H0.  Tout d'abord la courbe pour la troponine à H0 puis une étude de la copeptine selon le taux de troponine. 

```{r}
#| label: fig-roc_troponine
#| fig-cap: Troponine à H0 - Courbe ROC
#| fig-asp: 1

zz <- tt |>
mutate(scanonston = ifelse(scanonston == "Oui", 1, 0)) |>
ggplot() +
aes(d = scanonston, m = tropoh0) +
geom_roc() +
style_roc(guide = TRUE, theme = theme_light) +
geom_abline(aes(intercept = 0, slope  = 1), linetype = 2, color = "grey50") +
labs(title = "Troponine H0", 
     x = " 1 - sensibilité", 
     y = "Spécificité") +
theme(plot.title = element_text(size = 16, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12))


zz +
geom_rocci(fill = "pink") +
annotate(
"text",
x = .65,
y = .25,
size = 6,
label = paste0("AUC =", round(calc_auc(zz)$AUC, 2))
)
```

```{r}
#| label: fig-roc_copeptine_tropo
#| fig-cap: copeptine à H0 (selon la troponine) - Courbe ROC
#| fig-asp: 0.8


 zz <- tt |> 
   dplyr::filter(tp0 == "Normale") |>
   ggplot() +
   aes(d = scanonston, m = copepth0, color = tp0) +
   geom_roc() 
   aa <- calc_auc(zz)
   aa1 <- round(aa$AUC,2)
   zz <- tt |> 
     dplyr::filter(tp0 == "Élevée") |>
     ggplot() +
     aes(d = scanonston, m = copepth0, color = tp0) +
     geom_roc() 
   aa <- calc_auc(zz)
   aa2 <- round(aa$AUC,2)
#
tt |>
  mutate(scanonston = ifelse(scanonston == "Oui", 1, 0)) |> 
  ggplot() +
  aes(d = scanonston, m = copepth0, color = tp0) +
  geom_roc() +
  style_roc(guide = TRUE, theme = theme_light,
            xlab = "1 - Sensibilité",
            ylab = "Spécificité",
            ) +
  geom_abline(aes(intercept = 0, slope  = 1), linetype = 2, color = "grey50") +
  labs(title = "Copeptine H0",
       color = "Troponine H0") +
  theme(plot.title = element_text(size = 16, face = "bold"),
        axis.title.x = element_text(size = 12),
        axis.title.y = element_text(size = 12)) +
annotate(
  "text",
  colour = "cyan3",
  x = .65,
  y = .25,
  size = 4,
  label = paste("AUC (troponine normale) = ", aa1)) +
  annotate(
    "text",
    colour = "red",
    x = .60,
    y = .15,
    size = 4,
    label = paste("AUC (troponine élevée) = ", aa2))
```

Chez les patients à troponine élevée la copeptine ne semble pas apportée grand chose, en tout cas il est impossible de fixer un seuil. Par contre chez les patients à troponine normale l'AUC atteint des valeurs (juste) acceptables avec un seuil quelque part entre 8 & 18 pg/mL. À noter que pour certains patients le dosage élevé de copeptine pouvait avoir une autre explication.

### Patients sans pathologie confondante

On exclu dans ces figures trois patients ayant une pathologie connue pour élever le taux de copeptine.

```{r}
#| label: prep-cp_propre

ttn <- tt |> 
  dplyr::filter(! subjid %in% c("01-024-CM", "01-159-SC", "01-167-LJ"))
```


```{r}
#| label: fig-roc_cpt-propre
#| fig-cap: Copeptine à H0 - Courbe ROC
#| fig-asp: 1

zz <- ttn |>
mutate(scanonston = ifelse(scanonston == "Oui", 1, 0)) |>
ggplot() +
aes(d = scanonston, m = copepth0) +
geom_roc() +
style_roc(guide = TRUE, theme = theme_light) +
geom_abline(aes(intercept = 0, slope  = 1), linetype = 2, color = "grey50") +
labs(title = "Copeptine H0", 
     x = " 1 - sensibilité", 
     y = "Spécificité") +
theme(plot.title = element_text(size = 16, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12))


zz +
geom_rocci(fill = "pink") +
annotate(
"text",
x = .75,
y = .25,
size = 6,
label = paste("AUC =", round(calc_auc(zz)$AUC, 2))
)
```


```{r}
#| label: fig-roc_copeptine_tropo-propre
#| fig-cap: copeptine à H0 (selon la troponine) - Courbe ROC
#| fig-asp: 0.8


 zz <- ttn |> 
   dplyr::filter(tp0 == "Normale") |>
   ggplot() +
   aes(d = scanonston, m = copepth0, color = tp0) +
   geom_roc() 
   aa <- calc_auc(zz)
   aa1 <- round(aa$AUC,2)
   zz <- tt |> 
     dplyr::filter(tp0 == "Élevée") |>
     ggplot() +
     aes(d = scanonston, m = copepth0, color = tp0) +
     geom_roc() 
   aa <- calc_auc(zz)
   aa2 <- round(aa$AUC,2)
#
tt |>
  mutate(scanonston = ifelse(scanonston == "Oui", 1, 0)) |> 
  ggplot() +
  aes(d = scanonston, m = copepth0, color = tp0) +
  geom_roc() +
  style_roc(guide = TRUE, theme = theme_light,
            xlab = "1 - Sensibilité",
            ylab = "Spécificité",
            ) +
  geom_abline(aes(intercept = 0, slope  = 1), linetype = 2, color = "grey50") +
  labs(title = "Copeptine H0",
       color = "Troponine H0") +
  theme(plot.title = element_text(size = 16, face = "bold"),
        axis.title.x = element_text(size = 12),
        axis.title.y = element_text(size = 12)) +
annotate(
  "text",
  colour = "cyan3",
  x = .65,
  y = .25,
  size = 4,
  label = paste("AUC (troponine normale) = ", aa1)) +
  annotate(
    "text",
    colour = "red",
    x = .60,
    y = .15,
    size = 4,
    label = paste("AUC (troponine élevée) = ", aa2))
```

Pas de modification majeure des résultats en excluant trois patients ayant une autre cuase possible d'élévation de la copeptine. 


## Valeur du test

On regarde, sur tout l'échantillon, la valeur des tests troponine seule, copeptine seule &  troponine + copeptine. Cette analyse est faite avec les valeurs seuil usuelles. 

```{r}
#| label: tbl-diagtot 
#| tbl-cap: Valeur diagnostic des tests

tabx <- NULL
tabx <- tbssb(tt$tp0)
tabx <- tbssb(tt$cp0)
tabx <- tbssb(tt$tpcp0)
tabx <-  tabx |> 
  mutate(nom = c("Troponine", "Copeptine", "Troponine + Copeptine")) |> 
  relocate(nom, .before = n) 
names(tabx) <-  c("Test", "N","Sensibilité", "Spécificité", "VPP", "VPN")

tabx |>   
   kbl(longtable = TRUE, booktabs = TRUE) |>
      kable_styling(bootstrap_options = c("striped", "hover", "responsive"))|> 
footnote(general = "Données en pourcentage avec l'intervalle de confiance à 95 %",
         footnote_as_chunk = T) |> 
  column_spec(1, bold = TRUE) 
  
# Export 
if(expx){
  tabx |> 
    as_tibble() |>
    write_ods(path = classeur, 
              sheet = "ssb1", 
              append = TRUE)
}
```

Sur un test de première ligne comme celui-ci (un faux positif sera rapidement corrigé, un faux négatif renvoyé à la maison serait plus gênant) la **sensibilité** est le critère le plus important ou, en prenant en compte la prévalence de la maladie, la Valeur Prédictive Négative *VPN*. Le gain via l'ajout de copeptine semble important. Mais on ne met pas en évidence de différence entre les trois tests, les intervalles de confiance se chevauchant franchement. 

Sur cet échantillon la sensibilité des tests est médiocre en soit mais la VPN est excellente sans grande différence entre les trois tests étudiés (troponine seule, copeptine seule & troponine + copeptine). Néanmoins la troponine seule est nettement meilleure que la copeptine seule comme le montre les courbes ROC & les deux figures qui suivent.

```{r}
#| label: fig-ssbtropo
#| fig-cap: Troponine H0 selon le diagnostic final

gg <- tt |> 
ggplot() +
aes(x = tropoh0, fill = scanonston) +
geom_density(alpha = 0.5) +
scale_x_continuous(trans='log10') +
geom_vline(aes(xintercept = 15.6), linetype = "dashed", color = "red") +
annotate("text", x = 10, y = 2, label = "Femme", color = "red" ) +
geom_vline(aes(xintercept = 34.2), linetype = "dashed", color = "blue") +
  annotate("text", x = 50, y = 2, label = "Homme", color = "blue" ) +
theme_light() +

    labs(title = "Troponine à H0",
        fill = "SCA ST- confirmé",
x = "pg/mL", 
y = "n")+ 
    theme(
      plot.title = element_text(size = 16, face = "bold"),
      plot.subtitle = element_text(size = 12),
      axis.title.x = element_text(size = 12),
      axis.title.y = element_text(size = 12),
      legend.title = element_text(size = 12),
      legend.position = "top")

plot(gg)

```

```{r}
#| label: fig-ssbcopept
#| fig-cap: Copeptine H0 selon le diagnostic final

gg <- tt |> 
ggplot() +
aes(x = copepth0, fill = scanonston) +
geom_density(alpha = 0.5) +
scale_x_continuous(trans='log10') +
geom_vline(aes(xintercept = 10), linetype = "dashed", color = "black")  +
theme_light() +
    labs(title = "copeptine à H0",
        fill = "SCA ST- confirmé",
x = "pg/mL", 
y = "n")+ 
scale_fill_discrete_qualitative(palette = "Dark 3") +
    theme(
      plot.title = element_text(size = 16, face = "bold"),
      plot.subtitle = element_text(size = 12),
      axis.title.x = element_text(size = 12),
      axis.title.y = element_text(size = 12),
      legend.title = element_text(size = 12),
      legend.position = "top")


plot(gg)

```

##  Recherche des meilleurs seuils.

### Seuil optimal Copeptine

Vu que le seuill proposé par le laboratoire de Tenon est dans l'intervalle de confiance de notre recherche d'un seuil idéal il n'y aura pas de différence entre le seuil *Tenon* & le notre. 





### patient avec troponine normale

On peut s'intéresser aux patients avec une troponine normale vu la @fig-roc_copeptine_tropo. Attention, le nombre de sujet est plus faible donc les conclusions sont à prendre avec précaution. La courbe ROC, basée sur les taux de troponine & non une classification, est plus sensible.

```{r}
#| label: tbl-tpn
#| tbl-cap: Patients avec troponine normale


zz <- tt |> 
dplyr::filter(tp0 == "Normale")
tabx <- NULL

tabx <- tbssb(zz$cp0, zz$scanonston)
tabx <-  tabx |> 
  mutate(nom = c("Copeptine")) |> 
  relocate(nom, .before = n)  
names(tabx) <-  c("Test", "N","Sensibilité", "Spécificité", "VPP", "VPN")

tabx |>   
   kbl(longtable = TRUE, booktabs = TRUE) |>
      kable_styling(bootstrap_options = c("striped", "hover", "responsive"))|> 
footnote(general = "Données en pourcentage avec l'intervalle de confiance à 95 %",
         footnote_as_chunk = T) |> 
  column_spec(1, bold = TRUE) 
  
# Export 
if(expx){
  tabx |> 
    as_tibble() |>
    write_ods(path = classeur, 
              sheet = "ssbtpn", 
              append = TRUE)
}
#
rm(zz)
```

```{r}
#| label: fig-tropon
#| fig-cap: Patients avec troponine normale
#| 
tt |>
  filter(tp0 == "Normale") |>
  ggplot() +
  aes(y = copepth0, x = scanonston, fill = scanonston) +
  geom_violin() +
  geom_boxplot(
    width = .2,
    fill = "grey90"
  ) +
  scale_y_continuous(trans = "log10") +
  labs(
    title = "Taux de copeptine & diagnostic final",
    subtitle = "Patients à troponine normale à H0",
    x = "SCA ST-",
    y = "ng/mL",
    caption = ""
  ) +
  theme_light() +
  scale_fill_jama() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 12),
    axis.title.x = element_text(size = 12),
    legend.title = element_text(size = 12),
    axis.title.y = element_text(
      size = 12,
      angle = 0,
      vjust = .5
    ),
    axis.text.x = element_text(size = 12),
    axis.text.y = element_text(size = 12),
    legend.position = "none"
  )

```



# Critères secondaires

:::{.callout-warning}
## Attention !

- Dans les tableaux, pour les variables en Oui/non, seul les résultats pour les `Oui` sont présentés.

- Dans les figures comportant des dosages, les axes sont le plus souvent logarithmique.
:::

## Critère 1

*Évaluation des performances de diagnostiques de l’association troponine / copeptine selon les facteurs de risque cardiovasculaire (âge, tabac, hypertension, antécédents ischémiques cardiaque, surpoids, hérédité)*
    

Les différents facteurs de risque ne semblent pas influer la valeur du test. 

```{r}
#| label: tbl-crti1
#| tbl-cap: Performance diagnostique selon la population
#| eval: true

tabx <- NULL
#
pop <- "Total"
tabx <- tbssb(tt$cp0,tt$scanonston) 
#
ttn <- tt |> 
dplyr::filter(age > 59.9)
tabx <- tbssb(ttn$cp0,ttn$scanonston) 
#
ttn <- tt |> 
dplyr::filter(tabacon != "Aucun")
tabx <- tbssb(ttn$cp0,ttn$scanonston) 
#
ttn <- tt |> 
dplyr::filter(htaon == "Oui")
tabx <- tbssb(ttn$cp0,ttn$scanonston)
#
ttn <- tt |> 
dplyr::filter(cardiopathon == "Oui")
tabx <- tbssb(ttn$cp0,ttn$scanonston)
#
ttn <- tt |> 
dplyr::filter(surpdson == "Oui")
tabx <- tbssb(ttn$cp0,ttn$scanonston)
#

ttn <- tt |> 
dplyr::filter(diabeton == "Oui")
tabx <- tbssb(ttn$cp0,ttn$scanonston)
#
ttn <- tt |> 
dplyr::filter(cardiopatfamilion == "Oui")
tabx <- tbssb(ttn$cp0,ttn$scanonston) |> 
#
  mutate(nom = c("Total", "Âge > 60 ans", "Tabagisme",
                "HTA", "Cardiopathie ischémique", 
                "Surpoids", "Diabète", "Hérédité")) |> 
  relocate(nom, .before = n) 
names(tabx) <-  c("FdR", "N","Sensibilité", "Spécificité", "VPP", "VPN")
  
tabx |>   
   kbl(longtable = TRUE, booktabs = TRUE) |>
      kable_styling(bootstrap_options = c("striped", "hover", "responsive"))|> 
footnote(general = "Données en pourcentage avec l'intervalle de confiance à 95 %",
         footnote_as_chunk = T) |> 
  column_spec(1, bold = TRUE) 
  
# Export 
if(expx){
  tabx |> 
    as_tibble() |>
    write_ods(path = classeur, 
              sheet = "crit1", 
              append = TRUE)
}
```

\newpage

## Critère 2
*Évaluation de la durée du séjour aux urgences du patient.*

```{r}
#| label: tbl-crti2
#| tbl-cap: Évaluation de la durée du séjour aux urgences
tt |>
  mutate(tot = 1) |>
  tbl_continuous(
    variable = duree_urg, include = c(tot, tp0, cp0, tpcp0),
    value = tot ~ 1,
    label = list(tot = "Total")
  ) |>
  modify_header(label ~ "Durée du séjour aux urgences (min)") |>
  bold_labels() |>
  add_p() |> 
  bold_p() |>
  bold_labels() |>
  pexptabph(
    nomfich = classeur,
    nomsheet = "dsej",
    exp = expx, lg = TRUE
  )
``` 

La durée de séjour aux urgences est de Le temps passé aux urgences ne semble pas lié aux résultats des divers marqueurs. 

## Critère 3
*Évolution de l’association des dosages en fonction du délai entre 1ère douleur et prélèvements.*

```{r}
#| label: tbl-delai2
#| tbl-cap: Dosage vs délai douleur-prélèvement
#| eval: true

zz <- cor.test(tt$tropoh0,tt$doulprev)
llt <- beaup(zz$p.value,affp= FALSE)

#
zz <- cor.test(tt$copepth0,tt$doulprev)
llc <- beaup(zz$p.value,affp= FALSE)
#
tt |>
  mutate(tot = 1) |>
  tbl_continuous(
    variable = duree_urg, include = c(tot, tp0, cp0, tpcp0),
    value = tot ~ 1,
    label = list(tot = "Total")
  ) |>
  modify_header(label ~ "Durée du séjour aux urgences (min)") |>
  bold_labels() |>
  add_p() |>
  bold_p() |>
  bold_labels() |>
  pexptabph(
    nomfich = classeur,
    nomsheet = "dprev",
    exp = expx, lg = TRUE
  )

```

Le délai douleur-prélèvement ne semble pas influer sur les dosages de troponine ou de copeptine.

```{r}
#| label: fig-delaitpcp
#| fig-cap:  Troponine à H0 selon le délai entre douleur et prélèvements

tt |> 
  ggplot() +
  aes(x = doulprev, y = tropoh0) +
  geom_point() +
  scale_x_continuous(trans='log10') +
  scale_y_continuous(trans='log10') +
  geom_smooth(method  = "lm") +
  labs(title = "Troponine à H0 selon le délai\n entre douleur et prélèvements",
      subtitle = paste0(" p = ",llt),
      x = "Délai entre 1e douleur et prélèvements (min)",
      y = "Troponine H0",
      caption = "",
      fill = "") +
  theme_light() +
  scale_fill_jama() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 12),
    axis.title.x = element_text(size = 12),
    legend.title = element_text(size = 12),
    axis.title.y = element_text(
      size = 12,
      angle = 90,
      vjust = .5
    ),
  axis.text.x = element_text(size = 12),
  axis.text.y = element_text(size = 12),
  legend.position = "right"
  )
```

```{r}
#| label: fig-delaicop
#| fig-cap:  Copeptine à H0 selon le délai entre douleur et prélèvements

tt |> 
  ggplot() +
  aes(x = doulprev, y = copepth0) +
  geom_point() +
  scale_x_continuous(trans='log10') +
  scale_y_continuous(trans='log10') +
  geom_smooth(method  = "lm") +
  labs(title = "Copeptine à H0 selon le délai\n entre douleur et prélèvements",
      subtitle = paste0(" p = ",llc),
      x = "Délai entre 1e douleur et prélèvements (min)",
      y = "Copeptine H0",
      caption = "",
      fill = "") +
  theme_light() +
  scale_fill_jama() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 12),
    axis.title.x = element_text(size = 12),
    legend.title = element_text(size = 12),
    axis.title.y = element_text(
      size = 12,
      angle = 90,
      vjust = .5
    ),
  axis.text.x = element_text(size = 12),
  axis.text.y = element_text(size = 12),
  legend.position = "right"
  )
```

## Critère 4
*Évaluation de l’évolution de la douleur via l’échelle numérique entre l’arrivée aux urgences et la réévaluation à 3 heures*

```{r}
#| label: tbl-douleur
#| tbl-cap: Évolution de la douleur
#| eval: true

tt |> 
dplyr::select(doulh0, doulh3, ddoul,scanonston) |>
tbl_summary(by = scanonston, missing = "no", 
type=list(doulh3~"continuous")) |>
tabph(nn = 2, nomv = "**SCA ST-**", normx = FALSE) |> 
pexptabph(nomfich = classeur,
nomsheet = "douleur",
exp = expx)
```

```{r}
#| label: fig-douleur
#| fig-cap: Évolution de la douleur

tt |> 
dplyr::select(subjid, doulh0, doulh3,scanonston) |> 
pivot_longer(cols = c(doulh0, doulh3), names_to = "heure", values_to = "douleur") |> 
mutate(heure = factor(heure, labels = c("H0", "H3"))) |>
ggplot() +
aes(x = heure, y = douleur, fill = heure) +
geom_violin() +
geom_boxplot(width = 0.1, fill ="grey90") +
theme_light() +
 scale_fill_discrete_qualitative(palette = "Dark 3") +
    labs(title = "Évolution de la douleur") +
    theme(
      plot.title = element_text(size = 16, face = "bold"),
      plot.subtitle = element_text(size = 12),
      axis.title.x = element_text(size = 12),
      axis.title.y = element_text(size = 12),
      legend.title = element_text(size = 12),
      legend.position = "none")

```
```{r}
#| label: fig-douleur2
#| fig-cap: Évolution de la douleur selon la présence d'un SCA ST-

tt |> 
dplyr::select(subjid, doulh0, doulh3,scanonston) |> 
pivot_longer(cols = c(doulh0, doulh3), names_to = "heure", values_to = "douleur") |> 
mutate(heure = factor(heure, labels = c("H0", "H3"))) |>
ggplot() +
aes(x = heure, y = douleur, fill = heure) +
geom_violin() +
geom_boxplot(width = 0.1, fill ="grey90") +
facet_grid(row = vars(scanonston)) +
theme_light() +
 scale_fill_discrete_qualitative(palette = "Dark 3") +
    labs(title = "Évolution de la douleur \nselon la présence d'un SCA ST-") +
    theme(
      plot.title = element_text(size = 16, face = "bold"),
      plot.subtitle = element_text(size = 12),
      axis.title.x = element_text(size = 12),
      axis.title.y = element_text(size = 12),
      legend.title = element_text(size = 12),
      legend.position = "none")

```

Les patients non SCA ST- ont une douleur nulle à H3.

:::
