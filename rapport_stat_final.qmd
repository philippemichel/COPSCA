---
subtitle: "Rapport statistique V1.0"
cache: false
---

::: {.panel-tabset}
# Introduction

**Place du dosage copeptine - troponine dans le diagnostic d’élimination des SCA non ST+ dans la prise en charge des douleurs thoraciques non traumatiques en pré et intra hospitalier chez l’adulte.**

Recherche non-interventionnelle impliquant la personne humaine

:::{.callout-note}
**Responsable scientifique** : M<sup>me</sup> Marion DUPAIN

**Investigateur coordonnateur** :  D<sup>r</sup> Olivier FANCELLI 
Service d’Accueil des Urgences – NOVO (Site Pontoise)

**Chef de projet** : M<sup>me</sup> Véronique DA COSTA

**Data-manager** : M. Nathanaël CHARRIER
:::

```{r}
#| label: setup

rm(list = ls())
#
library(baseph)
library(janitor)
library(tidyverse)
library(gtsummary)
library(kableExtra)
library(lubridate)
library(kableExtra)
library(forestmodel)
library(labelled)
library(epiDisplay)
library(visdat)
library(GGally)
library(ggridges)
library(ggsci)
library(colorspace)
library(apyramid)
#library(plotly)
library(plotROC)
#
theme_gtsummary_language(language = "fr", decimal.mark = ",")
options(OutDec = ",")
#
load("data/copsca.RData")
expx <- FALSE
classeur <- "copsca2.xls"
if (expx){system(paste0("rm -f ",classeur))}
```

```{r}
#| label: macro_diag

diagci <- function(pp,nn){
vpp <- qnorm(0.975) * sqrt(pp*(1-pp)/nn)
#if (vpp == 0){vpp = NA}
pp0 <- round(100*pp,0)
vpp1 <- round(100*(pp - vpp),0)
if(vpp1 <= 0){vpp1 = NA}
vpp2 <- round(100*(pp + vpp),0)
if(vpp2 >= 100){vpp2 = NA}
ppt <- paste0(pp0, " (", vpp1, ";", vpp2, ")")
return(ppt)
}


diagph <- function(test, gold){
zz <- table(test, gold)
#
ssb <- zz[1,1]/(zz[1,1] + zz[2,1])
ssbt <- diagci(ssb, zz[1,1] + zz[2,1])
#
ssp <- zz[2,2]/(zz[2,2] + zz[1,2])
sspt <- diagci(ssp, zz[2,2] + zz[1,2])
#
vvp <- zz[1,1]/(zz[1,1] + zz[1,2])
vvpt <- diagci(vvp, zz[1,1] + zz[1,2])
#
vvn <- zz[2,2]/(zz[2,1] + zz[2,2])
vvnt <- diagci(vvn, zz[2,1] + zz[2,2])
#
return(list(ssb = ssbt, ssp = sspt, vvpt = vvpt, vvn = vvnt))
}
```

```{r}
#| label: macro_date

difdate <- function(dd1,hh1,dd2,hh2){
  zz1 <- as.numeric(dmy_hms(paste0(dd1," ",hh1)))
  zz2 <- as.numeric(dmy_hms(paste0(dd2," ",hh2)))
  dif <- (zz2 - zz1)/60
  return(dif)
}
```


# Description de la population

L'échantillon comporte `r nrow(demog)` cas. 



```{r}
#| label: tbl-sca
#| tbl-cap: Diagnostic final

tt |> 
  dplyr::select(scanonston) |> 
  tbl_summary() |> 
  modify_header(label ~ " ") |>
bold_labels() |>
pexptabph(nomfich = classeur,
nomsheet = "sca",
exp = expx)
```


## Démographie

```{r}
#| label: tbl-demog
#| tbl-cap: Données démographiques

tt |> 
  drop_na(scanonston) |>
dplyr::select(age:imc, scanonston) |>
tbl_summary(missing = "no", 
by = scanonston,
            statistic = list(all_categorical() ~ "{n}/{N} ({p})")) |>
modify_header(label ~ " ") |>
 modify_spanning_header(c("stat_1", "stat_2") ~ "**SCA ST-**") |>
bold_labels() |>
  add_overall() |>
  add_p() |>
  bold_p() |> 
pexptabph(nomfich = classeur,
nomsheet = "demog1",
exp = expx) 
```

Les différences -- attendues -- entre les deux groupes seront à prendre en compte pour les analyses suivantes.


```{r}
#| label: fig-ages
#| fig-cap: Pyramide des âges

demog |>
    mutate(agerec = cut(age,
    breaks = c(20, 30, 40, 50, 60, 70, 80, 90, 100),
    labels = c("21-30", "31,40", "41-50", "51-60", "61-70", "71,80", "81-90", ">90")
))|>
mutate(agerec = as.factor(agerec)) |>
# Tracé du graphique
age_pyramid(age_group = "agerec",
            split_by = "sex",
            pal = c("pink", "lightblue"),
show_midpoint = FALSE) +
theme_light() +
    labs(title = "Pyramide des âges",
         x = "ans",
        fill = "Sexe") + 
    theme(
      plot.title = element_text(size = 14, face = "bold"),
      plot.subtitle = element_text(size = 12),
      axis.title.x = element_blank(),
      axis.title.y = element_text(size = 12),
      legend.title = element_blank(),
      legend.position = "bottom")

```



## Antécédents

```{r}
#| label: tbl-atcd
#| tbl-cap: Antécédents

atcd |>
    left_join(finet, by = "subjid") |> 
  drop_na(scanonston) |>
dplyr::select(2:11,scanonston) |>
tbl_summary(missing = "no", 
            by = scanonston,
  #                      naisstermsa ~ "continuous"),
            statistic = list(all_categorical() ~ "{n}/{N} ({p})")) |>
modify_header(label ~ " ") |>
  modify_spanning_header(c("stat_1", "stat_2") ~ "**SCA ST-**") |>
bold_labels() |>
add_overall() |>
add_p() |>
bold_p() |> 
as_kable_extra(longtable = FALSE, booktabs = TRUE) |>
      kable_styling(latex_options = c("repeat_header"))
# pexptabph(nomfich = classeur,
# nomsheet = "atcd1",
# exp = expx)
```

## Clinique

```{r}
#| label: tbl-clinique
#| tbl-cap: Tableau clinique

tt |> 
  drop_na(scanonston) |>
dplyr::select(douleur7on: autredoumon, scanonston) |>
tbl_summary(missing = "no",
            by = scanonston,
type = list(doulh0 ~ "continuous",
            doulh3 ~ "continuous",
            dyspneeon ~ "categorical"),
            statistic = list(all_categorical() ~ "{n}/{N} ({p})")) |>
modify_header(label ~ " ") |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**SCA ST-**") |>
add_overall() |>
add_p() |>
bold_labels() |>
pexptabph(nomfich = classeur,
nomsheet = "atcd1",
exp = expx)

```

```{r}
#| label: tbl-ttantalg
#| tbl-cap: Traitements antalgiques reçus

zz <- tt |>
dplyr::select(antalgon:ainson,scanonston) |>
mutate(ainson = factor(ainson, levels = c("no", "yes")),
       paracetcodon = factor(paracetcodon, levels = c("no", "yes"))) 
  var_label(zz$ainson) <- "AINS"
  var_label(zz$paracetcodon) <- "Paracétamol + codéine"
  
zz |> 
  tbl_summary(missing = "no",
              by = scanonston,
            statistic = list(all_categorical() ~ "{n}/{N} ({p})")) |>
modify_header(label ~ " ") |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**SCA ST-**") |>
bold_labels() |>
    add_p() |>
  bold_p() |> 
bold_labels() |>
pexptabph(nomfich = classeur,
nomsheet = "atcd1",
exp = expx)
```

```{r}
#| label: tbl-delais
#| tbl-cap: Délais

tt |>
  dplyr::select(sympt_urg:urg_h3, scanonston) |>
  tbl_summary(
    missing = "no",
    by = scanonston,
    statistic = list(all_categorical() ~ "{n}/{N} ({p})")
  ) |>
  modify_header(label ~ " ") |>
  add_p() |>
  modify_spanning_header(c("stat_1", "stat_2") ~ "**SCA ST-**") |>
  bold_p() |>
  bold_labels() |>
  pexptabph(
    nomfich = classeur,
    nomsheet = "atcd1",
    exp = expx
  )
```

# Résultats biologiques

Description simple des divers taux de troponine & copeptine.

```{r}
#| label: tbl-biol
#| tbl-cap: Marqueurs à H0 et H3

tt |>
dplyr::select(tropoh0,copepth0,tropoh3,scanonston) |>
tbl_summary(missing = "no",
            by = scanonston,
            statistic = list(all_categorical() ~ "{n}/{N} ({p})")) |>
modify_header(label ~ " ") |>
  modify_spanning_header(c("stat_1", "stat_2") ~ "**SCA ST-**") |>
bold_labels() |>
  add_overall() |> 
        add_p() |>
  add_n() |> 
  bold_p() |> 
pexptabph(nomfich = classeur,
nomsheet = "biol",
exp = expx)
```

```{r}
#| label: tbl-tpcpt
#| tbl-cap: Résultats à H0 & diagnostic final

tt |> 
  dplyr::select(tp0,cp0,tpcp0,scanonston) |> 
  tbl_summary(by = scanonston, 
              missing = "no", 
              percent = "row") |> 
modify_spanning_header(c("stat_1", "stat_2") ~ "**SCA ST-**") |>
bold_labels() |>
  add_p() |> 
    add_overall() |> 
  bold_p() |> 
pexptabph(nomfich = classeur,
nomsheet = "tpcpt",
exp = expx)
```


```{r}
#| label: fig-tropoh0
#| fig-cap: Troponine à H0

tt |> 
ggplot() +
aes(x = tropoh0, fill = sex) +
geom_density(alpha = 0.5) +
scale_x_continuous(trans='log10') +
geom_vline(aes(xintercept = 15.6), linetype = "dashed", color = "red") +
geom_vline(aes(xintercept = 34.2), linetype = "dashed", color = "blue") +
theme_light() +

    labs(title = "Troponine à H0",
        fill = "Sexe",
x = "pg/mL", 
y = "n")+ 
    theme(
      plot.title = element_text(size = 16, face = "bold"),
      plot.subtitle = element_text(size = 12),
      axis.title.x = element_text(size = 12),
      axis.title.y = element_text(size = 12),
      legend.title = element_blank(),
      legend.position = "bottom")
```

```{r}
#| label: fig-cpt0
#| fig-cap: Copeptine à H0

tt |> 
ggplot() +
aes(x = copepth0, fill = sex) +
geom_density(alpha = 0.5) +
scale_x_continuous(trans='log10') +
geom_vline(aes(xintercept = 10), linetype = "dashed", color = "black")  +
theme_light() +
    labs(title = "copeptine à H0",
        fill = "Sexe",
x = "pg/mL", 
y = "n")+ 
scale_fill_discrete_qualitative(palette = "Dark 3") +
    theme(
      plot.title = element_text(size = 16, face = "bold"),
      plot.subtitle = element_text(size = 12),
      axis.title.x = element_text(size = 12),
      axis.title.y = element_text(size = 12),
      legend.title = element_blank(),
      legend.position = "bottom")
```

## Corrélation entre la copeptine et la troponine

```{r}
#| label: fig-trpopct0
#| fig-cap: Corrélation Copeptine/Troponine

zzc <- cor.test(tt$copepth0, tt$tropoh0, method = "spearman")
zzc <- beaup(zzc[[3]], affp = 1)

tt |>
ggplot() +
aes(x = copepth0, y = tropoh0, color = sex) +
geom_jitter()+
geom_smooth(method = "lm", se = TRUE, alpha = 0.2) +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
  annotation_logticks() +
theme_light() +
    labs(title = "Corrélation copeptine/troponine",
         subtitle = zzc,
        fill = "Sexe",
x = "copeptine (pg/mL)", 
y = "Troponine (pg/mL)") +
    theme(
      plot.title = element_text(size = 16, face = "bold"),
      plot.subtitle = element_text(size = 12),
      axis.title.x = element_text(size = 12),
      axis.title.y = element_text(size = 12),
      legend.title = element_blank(),
      legend.position = "bottom")

```

```{r}
#| label: tbl-tpcp2
#| tbl-cap: Corrélation Copeptine/Troponine
zz <- cor.test(tt$copepth0, tt$tropoh0, method = "spearman")
zz <- paste0("r = ", round(zz[[4]],2), " - ", beaup(zz[[3]], affp = 1))

tt |> 
  tbl_cross(tp0, cp0,percent = "cell",
            missing_text = "Inconnue") |> 
bold_labels() |>
  add_p() |> 
pexptabph(nomfich = classeur,
nomsheet = "ptcp2",
exp = expx)
```

Il existe une bonne corrélation entre les deux indicateurs (`r zz`).


# Critère principal

**Le diagnostic de SCA ST- est porté sur une valeur supérieure à 5 fois la valeur seuil au 99<sup>e</sup> percentile ou une élévation prouvée des concentrations de troponine cardiaque, avec au moins une valeur supérieure au 99<sup>e</sup> percentile de la limite supérieure de référence associée à une augmentation ou diminution de la concentration de troponine sur les 2 dosages pour prouver le caractère aigu de cette élévation.**

Vu avec le laboratoire de l'hôpital pour la troponine les valeurs seuil au 99<sup>e</sup> percentile sont les suivantes : 

- supérieur à 15.6 pg/mL pour les femmes 
- supérieur à 34.2 pg/mL pour les hommes


## Recheche d'un seuil pour la copeptine

Dans un premier temps, nous avons cherché un seuil pour la copeptine sans tenir compte de la troponine.

```{r}
#| label: fig-roc_copeptine
#| fig-cap: Copeptine à H0 - Courbe ROC
#| fig-asp: 1

zz <- tt |>
mutate(scanonston = ifelse(scanonston == "Oui", 1, 0)) |>
ggplot() +
aes(d = scanonston, m = copepth0) +
geom_roc() +
style_roc(guide = TRUE, theme = theme_light) +
geom_abline(aes(intercept = 0, slope  = 1), linetype = 2, color = "grey50") +
labs(title = "Copeptine H0", 
     x = " 1 - sensibilité", 
     y = "Spécificité") +
theme(plot.title = element_text(size = 16, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12))


zz +
geom_rocci(fill = "pink") +
annotate(
"text",
x = .75,
y = .25,
size = 6,
label = paste("AUC =", round(calc_auc(zz)$AUC, 2))
)
```

Le seuil semble se trouver entre 6 & 14 g/mL. Vu l'échantillon modeste les intervalles de confiance (en rose sur la courbe) sont larges. Donc nous resterons sur la seuil proposé par le laboratoire de Tenon à 10 pg/mL.



## Seuil selon la troponine

Nous essayons de voir si le seuil varie selon le taux de troponine à H0.  Tout d'abord la courbe pour la troponine à H0 puis une étude de la copeptine selon le taux de troponine. 

```{r}
#| label: fig-roc_troponine
#| fig-cap: Troponine à H0 - Courbe ROC
#| fig-asp: 1

zz <- tt |>
mutate(scanonston = ifelse(scanonston == "Oui", 1, 0)) |>
ggplot() +
aes(d = scanonston, m = tropoh0) +
geom_roc() +
style_roc(guide = TRUE, theme = theme_light) +
geom_abline(aes(intercept = 0, slope  = 1), linetype = 2, color = "grey50") +
labs(title = "Troponine H0", 
     x = " 1 - sensibilité", 
     y = "Spécificité") +
theme(plot.title = element_text(size = 16, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12))


zz +
geom_rocci(fill = "pink") +
annotate(
"text",
x = .75,
y = .25,
size = 6,
label = paste("AUC =", round(calc_auc(zz)$AUC, 2))
)
```

```{r}
#| label: fig-roc_copeptine_tropo
#| fig-cap: copeptine à H0 (selon la troponine)troponine H0 normale) - Courbe ROC
#| fig-asp: 1


 zz <- tt |> 
   dplyr::filter(tp0 == "Normale") |>
   ggplot() +
   aes(d = scanonston, m = copepth0, color = tp0) +
   geom_roc() 
   aa <- calc_auc(zz)
   aa1 <- round(aa$AUC,2)
   zz <- tt |> 
     dplyr::filter(tp0 == "Élevée") |>
     ggplot() +
     aes(d = scanonston, m = copepth0, color = tp0) +
     geom_roc() 
   aa <- calc_auc(zz)
   aa2 <- round(aa$AUC,2)
#
tt |>
  mutate(scanonston = ifelse(scanonston == "Oui", 1, 0)) |> 
  ggplot() +
  aes(d = scanonston, m = copepth0, color = tp0) +
  geom_roc() +
  style_roc(guide = TRUE, theme = theme_light,
            xlab = "1 - Sensibilité",
            ylab = "Spécificité",
            ) +
  geom_abline(aes(intercept = 0, slope  = 1), linetype = 2, color = "grey50") +
  labs(title = "Copeptine H0",
       color = "Troponine H0") +
  theme(plot.title = element_text(size = 16, face = "bold"),
        axis.title.x = element_text(size = 12),
        axis.title.y = element_text(size = 12)) +
annotate(
  "text",
  colour = "cyan3",
  x = .75,
  y = .25,
  size = 5,
  label = paste("AUC (troponine normale) = ", aa1)) +
  annotate(
    "text",
    colour = "red",
    x = .75,
    y = .15,
    size = 5,
    label = paste("AUC (troponine élevée) = ", aa2))
```

Vu le faible nombre de cas dans chaque tranche de copeptine les intervalles de confiance (non représentés) sont énormes. La courbe des patients *troponine négative* semble intéressante mais ne porte que sur 8 cas.  

## Valeur du test

On regarde, sur tout l'échantillon, la valeur des tests troponine seule, copeptine seule &  troponine + copeptine. Cette analyse est faite avec les valeurs seuil usuelles. 

```{r}
#| label: tbl-diagtot
#| tbl-cap: Valeur diagnostic des tests

tt_ps = diagph(tt$tp0, tt$scanonston)
tt_pc = diagph(tt$cp0, tt$scanonston)
tt_tpcp = diagph(tt$tpcp0, tt$scanonston)
diagx <- tibble(tt_ps, tt_pc, tt_tpcp) |> 
mutate(test = as.factor(c("Sensibilité","Spécificité","VPP","VPN"))) |> 
relocate(test, .before = tt_ps)
names(diagx) <- c("Test","Troponine","Copeptine","Troponine + Copeptine")


diagx |> 
   kbl(longtable = TRUE, booktabs = TRUE) |>
      kable_styling(bootstrap_options = c("striped", "hover", "responsive")) |> 
column_spec(1, bold = TRUE) |>
  footnote(general = "N = 91. Les valeurs sont données avec leur intervalle de confiance à 95 %.")
```

Sur un test de première ligne comme celui-ci (un faux positif sera rapidement corrigé, un faux négatif renvoyé à la maison serait plus gênant) la **sensibilité** est le critère le plus important. Le gain via l'ajout de copeptine semble important.  Sur cet échantillon la sensibilité des tests est médiocre en soit mais la VPN est excellente sans grande différence entre les trois tests étudiés (troponine seule, copeptine seule & troponine + copeptine). Néanmoins la troponine seule est nettement meilleure que la copeptine seule comme le montre mles courbes ROC & les deux figures qui suivent.

```{r}
#| label: fig-ssbtropo
#| fig-cap: Troponine H0 selon le diagnostic final

tt |>
ggplot() +
aes(x  = tropoh0, fill = scanonston) +
geom_density(alpha = 0.5) +
geom_vline(aes(xintercept = 15.6), linetype = "dashed", color = "red") +
geom_vline(aes(xintercept = 34.2), linetype = "dashed", color = "blue") +
scale_x_continuous(trans='log10') +
theme_light() +
    labs(title = "Troponine H0 selon le diagnostic final",
       fill = "SCA ST -",
x = "copeptine (pg/mL)", 
y = "Troponine (pg/mL)") +
    theme(
      plot.title = element_text(size = 16, face = "bold"),
      plot.subtitle = element_text(size = 12),
      axis.title.x = element_text(size = 12),
      axis.title.y = element_text(size = 12),
      legend.title = element_text(size = 12),
      legend.position = "bottom")


```

```{r}
#| label: fig-ssbcopept
#| fig-cap: Copeptine H0 selon le diagnostic final

tt |>
ggplot() +
aes(x  = copepth0, fill = scanonston) +
geom_density(alpha = 0.5) +
geom_vline(aes(xintercept = 10), linetype = "dashed", color = "black") +
scale_x_continuous(trans='log10') +
theme_light() +
scale_fill_discrete_qualitative(palette = "Dark 3") +    
labs(title = "Copeptine H0 selon le diagnostic final",
       fill = "SCA ST -",
x = "copeptine (pg/mL)", 
y = "Troponine (pg/mL)") +
    theme(
      plot.title = element_text(size = 16, face = "bold"),
      plot.subtitle = element_text(size = 12),
      axis.title.x = element_text(size = 12),
      axis.title.y = element_text(size = 12),
      legend.title = element_text(size = 12),
      legend.position = "bottom")


```

##  Recherche des meilleurs seuils.

### Seuil optimal Copeptine

Vu que le sueil proposé par le laboratoire de Tenon est dans l'intervalle de confiance de notre recherche d'un seuil idéal il n'y aura pas de différence entre le seuil *Tenon* & le notre. 





### patient avec troponine normale

On peut s'intéresser aux patients avec une troponine normale vu la @fig-roc_copeptine_tropo. Attention, le nombre de sujet est plus faible donc les conclusions sont à prendre avec précaution. De plus la différence avec l'échantillon global est peu importante (7 cas de moins) donc il est peu probable de mettre une différence en évidence. La courbe ROC, basée sur les taux de troponine & non une classification, est plus sensible.

```{r}
#| label: tbl-tpn
#| tbl-cap: Patients avec troponine normale

zz <- tt |> 
dplyr::filter(tp0 == "Normale")
tt_pc = diagph(zz$cp0, zz$scanonston)
diagx <- tibble(tt_pc) |> 
mutate(test = as.factor(c("Sensibilité","Spécificité","VPP","VPN"))) |> 
relocate(test, .before = tt_pc)
names(diagx) <- c("Test","Copeptine","Troponine + Copeptine")

diagx |> 
   kbl(longtable = TRUE, booktabs = TRUE) |>
      kable_styling(bootstrap_options = c("striped", "hover", "responsive")) |> 
column_spec(1, bold = TRUE) |>
  footnote(general = "N = 91. Les valeurs sont données avec leur intervalle de confiance à 95 %.")
#
rm(zz)
```

```{r}
#| label: fig-tropon
#| fig-cap: Patients avec troponine normale

tt |>
  filter(tp0 == "Normale") |>
  ggplot() +
  aes(y = copepth0, x = scanonston, fill = scanonston) +
  geom_violin() +
  geom_boxplot(
    width = .2,
    fill = "grey90"
  ) +
  scale_y_continuous(trans = "log10") +
  labs(
    title = "Taux de copeptine & diagnostic final",
    subtitle = "Patients à troponine normale à H0",
    x = "SCA ST-",
    y = "ng/mL",
    caption = ""
  ) +
  theme_light() +
  scale_fill_jama() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 12),
    axis.title.x = element_text(size = 12),
    legend.title = element_text(size = 12),
    axis.title.y = element_text(
      size = 12,
      angle = 0,
      vjust = .5
    ),
    axis.text.x = element_text(size = 12),
    axis.text.y = element_text(size = 12),
    legend.position = "none"
  )
```



# Critères secondaires

##Critère 1
*Évaluation des performances de diagnostiques de l’association troponine / copeptine selon les facteurs de risque cardiovasculaire (âge, tabac, hypertension, antécédents ischémiques cardiaque, surpoids, hérédité)*
    

Les différents facteurs de risque ne semblent pas influer la valeur du test. 

```{r}
#| label: tbl-crti1
#| tbl-cap: Performance diagnostique selon la population
#| eval: true

fr <- NULL
#
zz <- diagph(tt$tpcp0, tt$scanonston) 
ntot <- nrow(tt)
tot <- c("Total",ntot, zz[[1]], zz[[2]], zz[[3]], zz[[4]])
fr <- rbind(fr, tot)
#
ttn <- tt |> 
dplyr::filter(age > 59.9)
zz <- diagph(ttn$tpcp0, ttn$scanonston)
ntot <- nrow(ttn)
age <- c("Âge > 60 ans",ntot, zz[[1]], zz[[2]], zz[[3]], zz[[4]])
fr <- rbind(fr, age)
#
ttn <- tt |> 
dplyr::filter(tabacon != "Aucun")
zz <- diagph(ttn$tpcp0, ttn$scanonston)
ntot <- nrow(ttn)
tabac <- c("Tabagisme",ntot, zz[[1]], zz[[2]], zz[[3]], zz[[4]])
fr <- rbind(fr, tabac)
#
ttn <- tt |> 
dplyr::filter(htaon == "Oui")
zz <- diagph(ttn$tpcp0, ttn$scanonston)
ntot <- nrow(ttn)
hta <- c("HTA",ntot, zz[[1]], zz[[2]], zz[[3]], zz[[4]])
fr <- rbind(fr, hta)
#
ttn <- tt |> 
dplyr::filter(cardiopathon == "Oui")
zz <- diagph(ttn$tpcp0, ttn$scanonston)
ntot <- nrow(ttn)
cv <- c("Cardiopathie ischémique",ntot, zz[[1]], zz[[2]], zz[[3]], zz[[4]])
fr <- rbind(fr, cv)
#
ttn <- tt |> 
dplyr::filter(surpdson == "Oui")
zz <- diagph(ttn$tpcp0, ttn$scanonston)
ntot <- nrow(ttn)
pds <- c("Surpoids",ntot, zz[[1]], zz[[2]], zz[[3]], zz[[4]])
fr <- rbind(fr, pds)
#

ttn <- tt |> 
dplyr::filter(diabeton == "Oui")
zz <- diagph(ttn$tpcp0, ttn$scanonston)
ntot <- nrow(ttn)
diab <- c("Diabète",ntot, zz[[1]], zz[[2]], zz[[3]], zz[[4]])
fr <- rbind(fr, diab)
#
ttn <- tt |> 
dplyr::filter(cardiopatfamilion == "Oui")
zz <- diagph(ttn$tpcp0, ttn$scanonston)
ntot <- nrow(ttn)
hered <- c("Hérédité",ntot, zz[[1]], zz[[2]], zz[[3]], zz[[4]])
fr <- rbind(fr, pds, hered)
#
row.names(fr) <- NULL
colnames(fr) <- c("Population","N","Sensibilité","Spécificité","VPP","VPN")
fr |> 
   kbl(longtable = lg, booktabs = TRUE) |>
      kable_styling(bootstrap_options = c("striped", "hover", "responsive")) |> 
column_spec(1, bold = TRUE) |>
  footnote(general = "Les valeurs sont données avec leur intervalle de confiance à 95 %.")
```

## Critère 2
*Évaluation de la durée du séjour aux urgences du patient.*

```{r}
#| label: tbl-crti2
#| tbl-cap: Évaluation de la durée du séjour aux urgences
tt |>
tbl_continuous(variable = duree_urg, include = c(tp0, cp0,tpcp0)) |> 

add_p() |> 
bold_labels() |> 
pexptabph(nomfich = classeur,
nomsheet = "dsej",
exp = expx)
``` 

Le temps passé aux urgences ne semble pas lié aux résultats des divers marqueurs. 

## Critère 3
*Évolution de l’association des dosages en fonction du délai entre 1ère douleur et prélèvements.*

```{r}
#| label: tbl-delai2
#| tbl-cap: Dosage vs délai douleur-prélèvement
#| eval: true

aa <- NULL

zz <- cor.test(tt$tropoh0,tt$doulprev)
ll <- beaup(zz$p.value,affp= FALSE)
aa <- rbind(aa, c("Troponine",round(zz[[4]],2),ll))
#
zz <- cor.test(tt$copepth0,tt$doulprev)
ll <- beaup(zz$p.value,affp= FALSE)
aa <- rbind(aa, c("Copeptine",round(zz[[4]],2),ll))
#
zz <- as_tibble(aa)
names(zz) <- c("Dosage à H0","r","p-value")
zz |> 
   kbl(longtable = lg, booktabs = TRUE) |>
      kable_styling(bootstrap_options = c("striped", "hover", "responsive")) 
```

Le délai douleur-prélèvement ne semble influer sur les dosages de troponine ou de copeptine.

## Critère 4
*Évaluation de l’évolution de la douleur via l’échelle numérique entre l’arrivée aux urgences et la réévaluation à 3 heures*

```{r}
#| label: tbl-douleur
#| tbl-cap: Évolution de la douleur
#| eval: true

tt |> 
dplyr::select(doulh0, doulh3, ddoul) |>
tbl_summary(missing = "no", 
type=list(doulh3~"continuous")) |>
add_n() |>
bold_labels() |> 
 modify_header(label ~ "") |> 
pexptabph(nomfich = classeur,
nomsheet = "douleur",
exp = expx)
```

```{r}
#| label: fig-douleur
#| fig-cap: Évolution de la douleur

tt |> 
dplyr::select(subjid, doulh0, doulh3) |> 
pivot_longer(cols = c(doulh0, doulh3), names_to = "heure", values_to = "douleur") |> 
mutate(heure = factor(heure, labels = c("H0", "H3"))) |>
ggplot() +
aes(x = heure, y = douleur, fill = heure) +
geom_violin() +
geom_boxplot(width = 0.1, fill ="grey90") +
theme_light() +
 scale_fill_discrete_qualitative(palette = "Dark 3") +
    labs(title = "Évolution de la douleur") +
    theme(
      plot.title = element_text(size = 16, face = "bold"),
      plot.subtitle = element_text(size = 12),
      axis.title.x = element_text(size = 12),
      axis.title.y = element_text(size = 12),
      legend.title = element_text(size = 12),
      legend.position = "none")

```
:::

